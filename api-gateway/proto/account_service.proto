syntax = "proto3";

option go_package = "./proto";

service AccountService {
    rpc CreateAccount (CreateAccountRequest) returns (CreateAcocuntResponse) {};
    rpc GetAccountsByUserId (GetAccountsByUserIdRequest) returns (GetAccountsByUserIdResponse) {};
    rpc CreateTransaction (CreateTransactionRequest) returns (CreateTransactionResponse) {};
    rpc GetTransactionsByAccountId (GetTransactionsByAccountIdRequest) returns (GetTransactionsByAccountIdResponse) {};
}

message Account {
    bytes account_id = 1;
    int64 account_number = 2;
    int64 balance = 3;
    bytes user_id = 4;
}

message Transaction {
    bytes transaction_id = 1;
    bytes account_id = 2;
    int64 amount = 3;
    int64 timestamp = 4;
    bytes transaction_type = 5; // "credit" or "debit"
    bytes status = 6; // "pending", "completed", "failed"
}

message CreateAccountRequest {
    bytes user_id = 1;
    int64 balance = 2;
}

message CreateAcocuntResponse {
    int64 status = 1;
    bytes error = 2;
    bytes account_id = 3;
}

message GetAccountsByUserIdRequest {
    bytes user_id = 1;
}

message GetAccountsByUserIdResponse {
    int64 status = 1;
    bytes error = 2;
    repeated Account accounts = 3;
}

message CreateTransactionRequest {
    bytes account_id = 1;
    int64 amount = 2;
    bytes transaction_type = 3; // "credit" or "debit"
    bytes status = 4; // "pending", "completed", "failed"
}

message CreateTransactionResponse {
    int64 status = 1;
    bytes error = 2;
    bytes transaction_id = 3;
}

message GetTransactionsByAccountIdRequest {
    bytes account_id = 1;
}

message GetTransactionsByAccountIdResponse {
    int64 status = 1;
    bytes error = 2;
    repeated Transaction transactions = 3;
}

