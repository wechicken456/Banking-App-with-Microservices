
services:
  auth-db:
    image: postgres:alpine
    container_name: banking-auth-db
    restart: always
    environment:
      POSTGRES_DB: ${AUTH_DB_NAME}
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - auth-db_data:/var/lib/postgresql/data
    networks:
      - backend

  account-db:
    image: postgres:alpine
    container_name: banking-account-db
    restart: always
    environment:
      POSTGRES_DB: ${ACCOUNT_DB_NAME}
      POSTGRES_USER: ${ACCOUNT_DB_USER}
      POSTGRES_PASSWORD: ${ACCOUNT_DB_PASSWORD}
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${ACCOUNT_DB_USER} -d ${ACCOUNT_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5   
    volumes:
      - account-db_data:/var/lib/postgresql/data
    networks:
      - backend
  
  transfer-db:
    image: postgres:alpine
    container_name: banking-transfer-db
    restart: always
    environment:
      POSTGRES_DB: ${TRANSFER_DB_NAME}
      POSTGRES_USER: ${TRANSFER_DB_USER}
      POSTGRES_PASSWORD: ${TRANSFER_DB_PASSWORD}
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TRANSFER_DB_USER} -d ${TRANSFER_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - transfer-db_data:/var/lib/postgresql/data
    networks:
      - backend

  auth-service:
    build:
      context: ./auth
    container_name: auth-service
    depends_on:
      auth-db: {condition: service_healthy}
    environment:
      GRPC_PORT: ${AUTH_GRPC_PORT}
      AUTH_DB_HOST: banking-auth-db
      AUTH_DB_PORT: 5432
      AUTH_DB_USER: ${AUTH_DB_USER}
      AUTH_DB_PASSWORD: ${AUTH_DB_PASSWORD}
      AUTH_DB_NAME: ${AUTH_DB_NAME}
    ports:
      - "${AUTH_GRPC_PORT}:${AUTH_GRPC_PORT}"
    networks:
      - backend

  account-service:
    build:
      context: ./account
    container_name: account-service
    depends_on:
      account-db: {condition: service_healthy}
    environment:
      GRPC_PORT: ${ACCOUNT_GRPC_PORT}
      ACCOUNT_DB_HOST: banking-account-db
      ACCOUNT_DB_PORT: 5432
      ACCOUNT_DB_USER: ${ACCOUNT_DB_USER}
      ACCOUNT_DB_PASSWORD: ${ACCOUNT_DB_PASSWORD}
      ACCOUNT_DB_NAME: ${ACCOUNT_DB_NAME}
    ports:
      - "${ACCOUNT_GRPC_PORT}:${ACCOUNT_GRPC_PORT}"
    networks:
      - backend

  api-gateway_service:
    build:
      context: ./api-gateway
    container_name: api-gateway
    environment:
      AUTH_SERVICE_URL: "auth-service:${AUTH_GRPC_PORT}"
      ACCOUNT_SERVICE_URL: "account-service:${ACCOUNT_GRPC_PORT}"
      TRANSFER_SERVICE_URL: "transfer-service:${TRANSFER_GRPC_PORT}"
      HTTP_PORT: ${API_GATEWAY_HTTP_PORT}
    ports:
      - "8080:${API_GATEWAY_HTTP_PORT}"
    networks:
      - backend

      

  
  

volumes:
  auth-db_data:
  account-db_data:
  transfer-db_data:


networks:
  backend:


